/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.noway.avro.server.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Message\",\"namespace\":\"com.noway.avro.server.proto\",\"fields\":[{\"name\":\"requestName\",\"type\":\"string\"},{\"name\":\"orgId\",\"type\":\"string\"},{\"name\":\"appId\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"param\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence requestName;
  @Deprecated public java.lang.CharSequence orgId;
  @Deprecated public java.lang.CharSequence appId;
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence url;
  @Deprecated public java.lang.CharSequence param;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Message() {}

  /**
   * All-args constructor.
   */
  public Message(java.lang.CharSequence requestName, java.lang.CharSequence orgId, java.lang.CharSequence appId, java.lang.CharSequence id, java.lang.CharSequence url, java.lang.CharSequence param) {
    this.requestName = requestName;
    this.orgId = orgId;
    this.appId = appId;
    this.id = id;
    this.url = url;
    this.param = param;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return requestName;
    case 1: return orgId;
    case 2: return appId;
    case 3: return id;
    case 4: return url;
    case 5: return param;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: requestName = (java.lang.CharSequence)value$; break;
    case 1: orgId = (java.lang.CharSequence)value$; break;
    case 2: appId = (java.lang.CharSequence)value$; break;
    case 3: id = (java.lang.CharSequence)value$; break;
    case 4: url = (java.lang.CharSequence)value$; break;
    case 5: param = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'requestName' field.
   */
  public java.lang.CharSequence getRequestName() {
    return requestName;
  }

  /**
   * Sets the value of the 'requestName' field.
   * @param value the value to set.
   */
  public void setRequestName(java.lang.CharSequence value) {
    this.requestName = value;
  }

  /**
   * Gets the value of the 'orgId' field.
   */
  public java.lang.CharSequence getOrgId() {
    return orgId;
  }

  /**
   * Sets the value of the 'orgId' field.
   * @param value the value to set.
   */
  public void setOrgId(java.lang.CharSequence value) {
    this.orgId = value;
  }

  /**
   * Gets the value of the 'appId' field.
   */
  public java.lang.CharSequence getAppId() {
    return appId;
  }

  /**
   * Sets the value of the 'appId' field.
   * @param value the value to set.
   */
  public void setAppId(java.lang.CharSequence value) {
    this.appId = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'url' field.
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'param' field.
   */
  public java.lang.CharSequence getParam() {
    return param;
  }

  /**
   * Sets the value of the 'param' field.
   * @param value the value to set.
   */
  public void setParam(java.lang.CharSequence value) {
    this.param = value;
  }

  /** Creates a new Message RecordBuilder */
  public static com.noway.avro.server.proto.Message.Builder newBuilder() {
    return new com.noway.avro.server.proto.Message.Builder();
  }
  
  /** Creates a new Message RecordBuilder by copying an existing Builder */
  public static com.noway.avro.server.proto.Message.Builder newBuilder(com.noway.avro.server.proto.Message.Builder other) {
    return new com.noway.avro.server.proto.Message.Builder(other);
  }
  
  /** Creates a new Message RecordBuilder by copying an existing Message instance */
  public static com.noway.avro.server.proto.Message.Builder newBuilder(com.noway.avro.server.proto.Message other) {
    return new com.noway.avro.server.proto.Message.Builder(other);
  }
  
  /**
   * RecordBuilder for Message instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Message>
    implements org.apache.avro.data.RecordBuilder<Message> {

    private java.lang.CharSequence requestName;
    private java.lang.CharSequence orgId;
    private java.lang.CharSequence appId;
    private java.lang.CharSequence id;
    private java.lang.CharSequence url;
    private java.lang.CharSequence param;

    /** Creates a new Builder */
    private Builder() {
      super(com.noway.avro.server.proto.Message.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.noway.avro.server.proto.Message.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.requestName)) {
        this.requestName = data().deepCopy(fields()[0].schema(), other.requestName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appId)) {
        this.appId = data().deepCopy(fields()[2].schema(), other.appId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.url)) {
        this.url = data().deepCopy(fields()[4].schema(), other.url);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.param)) {
        this.param = data().deepCopy(fields()[5].schema(), other.param);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Message instance */
    private Builder(com.noway.avro.server.proto.Message other) {
            super(com.noway.avro.server.proto.Message.SCHEMA$);
      if (isValidValue(fields()[0], other.requestName)) {
        this.requestName = data().deepCopy(fields()[0].schema(), other.requestName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orgId)) {
        this.orgId = data().deepCopy(fields()[1].schema(), other.orgId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appId)) {
        this.appId = data().deepCopy(fields()[2].schema(), other.appId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.url)) {
        this.url = data().deepCopy(fields()[4].schema(), other.url);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.param)) {
        this.param = data().deepCopy(fields()[5].schema(), other.param);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'requestName' field */
    public java.lang.CharSequence getRequestName() {
      return requestName;
    }
    
    /** Sets the value of the 'requestName' field */
    public com.noway.avro.server.proto.Message.Builder setRequestName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.requestName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'requestName' field has been set */
    public boolean hasRequestName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'requestName' field */
    public com.noway.avro.server.proto.Message.Builder clearRequestName() {
      requestName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'orgId' field */
    public java.lang.CharSequence getOrgId() {
      return orgId;
    }
    
    /** Sets the value of the 'orgId' field */
    public com.noway.avro.server.proto.Message.Builder setOrgId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.orgId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'orgId' field has been set */
    public boolean hasOrgId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'orgId' field */
    public com.noway.avro.server.proto.Message.Builder clearOrgId() {
      orgId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'appId' field */
    public java.lang.CharSequence getAppId() {
      return appId;
    }
    
    /** Sets the value of the 'appId' field */
    public com.noway.avro.server.proto.Message.Builder setAppId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.appId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'appId' field has been set */
    public boolean hasAppId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'appId' field */
    public com.noway.avro.server.proto.Message.Builder clearAppId() {
      appId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.noway.avro.server.proto.Message.Builder setId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'id' field */
    public com.noway.avro.server.proto.Message.Builder clearId() {
      id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'url' field */
    public java.lang.CharSequence getUrl() {
      return url;
    }
    
    /** Sets the value of the 'url' field */
    public com.noway.avro.server.proto.Message.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.url = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'url' field has been set */
    public boolean hasUrl() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'url' field */
    public com.noway.avro.server.proto.Message.Builder clearUrl() {
      url = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'param' field */
    public java.lang.CharSequence getParam() {
      return param;
    }
    
    /** Sets the value of the 'param' field */
    public com.noway.avro.server.proto.Message.Builder setParam(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.param = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'param' field has been set */
    public boolean hasParam() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'param' field */
    public com.noway.avro.server.proto.Message.Builder clearParam() {
      param = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Message build() {
      try {
        Message record = new Message();
        record.requestName = fieldSetFlags()[0] ? this.requestName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.orgId = fieldSetFlags()[1] ? this.orgId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.appId = fieldSetFlags()[2] ? this.appId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.id = fieldSetFlags()[3] ? this.id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.url = fieldSetFlags()[4] ? this.url : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.param = fieldSetFlags()[5] ? this.param : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
